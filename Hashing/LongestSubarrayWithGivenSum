Q. Given an array containing N integers and an integer K., Your task is to find the length of the longest Sub-Array with the sum of the elements equal to the given value K.

Appraoch: Main case to handle is when prefix sum will repeat then your index will be updated which we dont want, so only insert when prefix sum is not present.

Variatons:
1. Longest subarray with equal 0s and 1s - Just replace 0 with -1 and problem will get converted to longest subarray with 0 sum.
2. Longest common span with same sum in binary array- Create a temp array storing differnece of 2 arrays, now problem is converted to longest subarray with 0 sum.

class Solution{
    
    public static int lenOfLongSubarr (int arr[], int n, int s) {
      
        int prefix_sum=0,maxLen=0;
        HashMap<Integer,Integer> map=new HashMap<>();
        for(int i=0;i<n;i++){
            
            prefix_sum+=arr[i];
        
            if(prefix_sum==s)
                maxLen=i+1;
                
            if(!map.containsKey(prefix_sum))
                map.put(prefix_sum,i);    
                
            if(map.containsKey(prefix_sum-s))
               maxLen=Math.max(maxLen,i- map.get(prefix_sum-s));
               
             }
         
         return maxLen;
    }
    
    
}


