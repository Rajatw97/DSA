Q. Given an unsorted array A of size N that contains only non-negative integers, find a continuous sub-array which adds to a given number S.

class Solution
{
   
    static ArrayList<Integer> subarraySum(int[] arr, int n, int s) 
    {
        // Your code here
        int prefix_sum=0;
        HashMap<Integer,Integer> map=new HashMap<>();
        for(int i=0;i<n;i++){
            
            prefix_sum+=arr[i];
        
            if(prefix_sum==s)
                return new ArrayList<Integer>(Arrays.asList(1,i+1));
                
            if(map.containsKey(prefix_sum-s))
                return new ArrayList<Integer>(Arrays.asList(map.get(prefix_sum-s)+1,i+1));
               
            map.put(prefix_sum,i+1);
         
         }
         
         return new ArrayList<Integer>(Arrays.asList(-1));
       
    }
}

 
