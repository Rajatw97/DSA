Q> Given two integers representing the numerator and denominator of a fraction, return the fraction in string format.
If the fractional part is repeating, enclose the repeating part in parentheses.
If multiple answers are possible, return any of them.

Input: numerator = 4, denominator = 333
Output: "0.(012)"


class Solution {
    public String fractionToDecimal(int n, int d) {
        
        StringBuilder ans=new StringBuilder();
        boolean neg=false;
        long num=n;
        long den=d;
        if(num<0 || den<0)
            neg=true;
        if(num<0 && den<0)
            neg=false;
        if(num==0) neg = false;
        num=Math.abs(num);
        den=Math.abs(den);
        long q=num/den;
        long rem=num%den;
        ans.append(q);
        if(rem==0){
             if(neg)
                ans.insert(0,"-");
            return ans.toString();
        }
        else{
            ans.append(".");
            Map<Long, Long> hmap=new HashMap<>();
            while(rem!=0){
                if(hmap.containsKey(rem)){
                    long pos=hmap.get(rem);
                    ans.insert((int)pos,"(");
                    ans.append(")");
                    break;
                }else{
                   hmap.put(rem,(long)ans.length());
                    rem*=10;
                    q=rem/den;
                    rem=rem%den;
                    ans.append(q);
                }
            }
        }
        if(neg)
            ans.insert(0,"-");
        return ans.toString();
        
    }
}
