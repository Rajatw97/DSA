Q. Implement the MedianFinder class:
MedianFinder() initializes the MedianFinder object.
void addNum(int num) adds the integer num from the data stream to the data structure.
double findMedian() returns the median of all elements so far. Answers within 10-5 of the actual answer will be accepted.

Input
["MedianFinder", "addNum", "addNum", "findMedian", "addNum", "findMedian"]
[[], [1], [2], [], [3], []]
Output
[null, null, null, 1.5, null, 2.0]


class MedianFinder {
    
    Queue<Integer> minheap;
    Queue<Integer> maxheap;
    
    public MedianFinder() {
       minheap=new PriorityQueue<>();
       maxheap=new PriorityQueue<>((a,b)->b-a);
    }
    
    public void addNum(int num) {
       
      maxheap.add(num);
      minheap.add(maxheap.poll());    
        if (maxheap.size() < minheap.size())
            maxheap.add(minheap.poll());
    }
    
    public double findMedian() {
        
            if(maxheap.size()==minheap.size())        
                return (minheap.peek() + maxheap.peek() ) / 2.0;
            return maxheap.peek();
    
        }
      
}

/**
 * Your MedianFinder object will be instantiated and called as such:
 * MedianFinder obj = new MedianFinder();
 * obj.addNum(num);
 * double param_2 = obj.findMedian();
 */
