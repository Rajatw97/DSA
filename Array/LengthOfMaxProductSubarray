Q. Given an array of integers nums, find the maximum length of a subarray where the product of all its elements is positive.
  A subarray of an array is a consecutive sequence of zero or more values taken out of that array.
  Return the maximum length of a subarray with positive product.
 
 Input: nums = [1,-2,-3,4]
  Output: 4
  
  Solution 1: Inefficient
  
  class Solution {
    public int getMaxLen(int[] nums) {
        
        int result=0;
       
        for(int i=0;i<nums.length;i++){
            
            if(nums.length-i <= result)
                break;
            if(nums[i]!=0){
                int countN=nums[i]<0?1:0;
                result=Math.max(result,nums[i]>0?1:0);
                for(int j=i+1;j<nums.length;j++){
                    if(nums[j]<0)
                        countN++;
                    else if(nums[j]==0)
                        break;
                    if(countN % 2==0)
                        result=Math.max(result,j-i+1);         
                }
            }
        }
        
        return result;
    }  
}

Solution 2: Efficient

Dry run:
elements      :   9    5    8    2    -6    4    -3    0    2    -5    15    10    -7    9    -2
positive_len  :   1    2    3    4     0    1     7    0    1     0     1     2     5    6     5
negative_len  :   0    0    0    0     5    6     2    0    0     2     3     4     3    4     7


class Solution {
    public int getMaxLen(int[] nums) {
        int positive = 0, negative = 0;    // length of positive and negative results
        int ans = 0;
        for(int x : nums) {
            if(x == 0)  {
                positive = 0;
                negative = 0;
            }
            else if(x > 0) {
                positive++;
                negative = negative == 0 ? 0  : negative+1;
            }
            else {
                int temp = positive;
                positive = negative == 0 ? 0  : negative+1;
                negative = temp+1;
            }
            ans = Math.max(ans, positive);
        }
        return ans;
    }
}
java
easy-understanding

