Q. Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent,
   with the colors in the order red, white, and blue.
   We will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively.
   
   Time Complexity: O(n)
   Space Complexity:O(1)


class Solution {
    public void sortColors(int[] nums) {
        
        int low=0,mid=0,high=nums.length-1;        
        while(mid<=high){           
            switch(nums[mid]){             
                case 0:{  
                    swap(nums,low,mid);
                    low++;
                    mid++;
                    break;
                }
                case 1:{
                    mid++;
                    break;
                }
                case 2:{
                    swap(nums,mid,high);
                    high--;
                    break;
             } }
            }
        }
    
    void swap(int[] arr, int low, int high){
        int temp=arr[high];
        arr[high]=arr[low];
        arr[low]=temp;
    }
}
