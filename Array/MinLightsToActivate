// There is a corridor in a Jail which is N units long. Given an array A of size N. The ith index of this array is 0 if the light at ith position is faulty otherwise it is 1.
// All the lights are of specific power B which if is placed at position X, it can light the corridor from [ X-B+1, X+B-1].
// Return the minimum number of lights to be turned ON to light the whole corridor or -1 if the whole corridor cannot be lighted.
I/P: A = [ 0, 0, 1, 1, 1, 0, 0, 1].
     B = 3
O/P: 2

public class Solution {
    public int solve(ArrayList<Integer> A, int B) {
        int count=0;
    for(int i=0; i< A.size();){

       int right=i+B-1>A.size()-1?A.size()-1:i+B-1;
       int flag=0;
       while(right>=i-B+1){
           if(A.get(right)==1){
               count++;
               i=B+right;
               flag=1;
               break;
           }
           right--;
       }
       if(flag==0) return -1;
       
    }
    return count;

    }
}
