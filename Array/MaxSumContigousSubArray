// Find the contiguous subarray within an array, A of length N which has the largest sum.
I/P: A = [-2, 1, -3, 4, -1, 2, 1, -5, 4]
O/p: 6
// Kadane's Algorithm
public class Solution {
    // DO NOT MODIFY THE LIST. IT IS READ ONLY
    public int maxSubArray(final List<Integer> A) {

        int newmax=0,result=A.get(0);
        for(int i=0;i<A.size();i++){
            newmax=Math.max(A.get(i),A.get(i)+newmax);
            result=Math.max(result,newmax);
        }
        return result;
    }
}
