Q. Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.
   The overall run time complexity should be O(log (m+n)).


class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        
         if(nums1.length > nums2.length)return findMedianSortedArrays(nums2,nums1);
        int begin=0,end=nums1.length;      
       
        while(begin<=end){
       
        int index1= (begin+end)/2; 
        int index2= (nums1.length+nums2.length+1)/2 - index1;
    
        int max1= index1==0?Integer.MIN_VALUE:nums1[index1-1];
        int min1= index1==nums1.length?Integer.MAX_VALUE: nums1[index1];   
        int max2= index2==0?Integer.MIN_VALUE: nums2[index2-1];
        int min2= index2==nums2.length?Integer.MAX_VALUE: nums2[index2];
        
        if(max1<=min2 && max2<=min1){
            
            if((nums1.length+nums2.length)%2==0)
                return (float)(Math.max(max1,max2)+Math.min(min1,min2))/2;
            else
                return Math.max (max1,max2);
        }
        else if(max1>min2){
            end=index1-1;
        }
        else{
            begin=index1+1;
        }
        }
        
        return 0;
    }
}
