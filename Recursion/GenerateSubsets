Q> Given an integer array nums of unique elements, return all possible subsets (the power set).
Input: nums = [1,2,3]
Output: [[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]

class Solution {
    
   List<List<Integer>> list=new ArrayList<>();
    public List<List<Integer>> subsets(int[] nums) {
        
       
        recurseSubset(nums,new ArrayList<>(),0);
        return list;
    }
    
    void recurseSubset(int[] nums, List<Integer> current, int index){
        
        if(index==nums.length)
        { 
            list.add(new ArrayList<>(current));
         
            return;
        }
        recurseSubset(nums,new ArrayList<>(current),index+1);
        current.add(nums[index]);
        recurseSubset(nums,new ArrayList<>(current),index+1);
    }
}
