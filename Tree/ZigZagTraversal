Q. Given the root of a binary tree, return the zigzag level order traversal of its nodes' values. 
(i.e., from left to right, then right to left for the next level and alternate between).

Input: root = [3,9,20,null,null,15,7]
Output: [[3],[20,9],[15,7]]

class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        
        Stack<TreeNode> stack1=new Stack<>();
        Stack<TreeNode> stack2=new Stack<>();
        List<List<Integer>> result=new ArrayList<>();
        List<Integer> list=new ArrayList<>();
        if(root==null)
            return result;
        stack1.push(root);
        while(!stack1.isEmpty() || !stack2.isEmpty()){
            TreeNode curr=new TreeNode();

            while(!stack1.isEmpty()){
                curr=stack1.pop();
                 list.add(curr.val);
                if(curr.left!=null)
                    stack2.push(curr.left);
                if(curr.right!=null)
                    stack2.push(curr.right);
                
            } 
            result.add(new ArrayList<>(list));
            list.clear();
            while(!stack2.isEmpty()) {
                curr=stack2.pop();
                list.add(curr.val);
                if(curr.right!=null)
                    stack1.push(curr.right);
                if(curr.left!=null)
                    stack1.push(curr.left);
              
            }
            if(!list.isEmpty())
                result.add(new ArrayList<>(list));   
             list.clear();
            }
        return result;
    }
}
