Q. Given two integer arrays inorder and postorder where inorder is the inorder traversal of a binary tree and postorder is the postorder traversal of the same tree,
construct and return the binary tree.

Input: inorder = [9,3,15,20,7], postorder = [9,15,7,20,3]
Output: [3,9,20,null,null,15,7] 

Inorder: Left Root Right
Preorder: Root left Right
Postorder: Left right root

class Solution {
      static int postIndex=0;
      
    public TreeNode buildTree(int[] inorder, int[] postorder) {
      postIndex=postorder.length-1;
      return treeFormation(inorder, postorder, 0,postorder.length-1);
  
    } 
  
    
     TreeNode treeFormation(int[] inorder, int[] postorder, int start, int end){
         
         if(start>end || postIndex==-1)
             return null;
         
         TreeNode root=new TreeNode(postorder[postIndex--]);
       
         int index=search(inorder,root.val);
         if(index!=-1){
         
         root.right=treeFormation(inorder,postorder,index+1,end);
         root.left=treeFormation(inorder,postorder,start,index-1);
         }
        return root;
         
     }
        
    int search(int[] inorder,int element){
        
        for(int i=0;i<inorder.length;i++){
            if(element == inorder[i])
                return i;
        }
        return -1;
    }
}
