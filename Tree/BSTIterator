Q>

class BSTIterator {

	Stack<TreeNode> stack>;
	public BSTIterator(TreeNode root) {
		stack = new Stack<>();
		updateStack(root);                                    
	}
	public int next() {
		TreeNode toRemove = stack.pop();
		updateStack(toRemove.right);                             
		return toRemove.val;
	}
	public boolean hasNext() {
		return !stack.isEmpty();    
	}
	
	public void updateStack(TreeNode node){
		while(node != null){
			stack.add(node);
			node = node.left;
		}
	}
}
