Q> Given the root of a binary tree with unique values and the values of two different nodes of the tree x and y,
    return true if the nodes corresponding to the values x and y in the tree are cousins, or false otherwise.
    Two nodes of a binary tree are cousins if they have the same depth with different parents.
    Note that in a binary tree, the root node is at the depth 0, and children of each depth k node are at the depth k + 1.
    
    Input: root = [1,2,3,4], x = 4, y = 3
    Output: false


class Solution {
    
    class Result{
        int parent;
        int height;
    }
    public boolean isCousins(TreeNode root, int x, int y) {
        
        
        Result a= solve(root,x,-1,0);
        Result b=solve(root,y, -1,0);
      
        if(a.height==b.height && a.parent != b.parent)
            return true;
           return false;
    }
    
    Result solve(TreeNode root, int curr,int parent,int height){
        
        if(root==null)
            return new Result();
                  
        if(curr==root.val){
            Result res=new Result();
            res.parent=parent;
            res.height=height;
            return res;
        }
        
        Result result=solve(root.left,curr,root.val,height+1);
        if(result.parent==0 && result.height==0)
            result= solve(root.right,curr,root.val,height+1);
        
        return result;
        
    }
}
