Q> Given the root node of a binary search tree and two integers low and high, return the sum of values of all nodes with a value in the inclusive range [low, high].

 Input: root = [10,5,15,3,7,null,18], low = 7, high = 15
Output: 32

class Solution {
    int count=0;
    public int rangeSumBST(TreeNode root, int low, int high) {
        binSearch(root,low,high);
        return count;
    }
                
    void binSearch(TreeNode root, int low, int high){
       if(root==null)
            return ;
       if(root.val>=low &&root.val<=high)
            count+=root.val;
       rangeSumBST(root.left,low,high);
       rangeSumBST(root.right,low,high);
    }
                 
}
