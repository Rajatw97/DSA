Q> Given an array of strings words and a width maxWidth, format the text such that each line has exactly maxWidth characters and is fully (left and right) justified.
Input: words = ["This", "is", "an", "example", "of", "text", "justification."], maxWidth = 16
Output:
[
   "This    is    an",
   "example  of text",
   "justification.  "
]

class Solution {
    public List<String> fullJustify(String[] words, int maxWidth) {
        int i=0;
        List<String> result=new ArrayList<>();
        while(i<words.length){
        int wc=words[i].length();
        int j=i+1;
        int spaces=0;
        while(j< words.length && spaces+wc+words[j].length()+1<=maxWidth){
            wc+=words[j].length();
            spaces++;
            j++;
        }
        
        int diffInWidth=maxWidth-wc;
        
        
        int minSpace=spaces==0?0:diffInWidth/spaces;
        int extraSpace= spaces==0?0:diffInWidth%spaces;
        if(j==words.length){
            minSpace=1;
            extraSpace=0;
        }
        StringBuilder sb=new StringBuilder();
        for(int k=i;k<j;k++){
            sb.append(words[k]);
            if(k==j-1)
                break;
            for( i=0;i<minSpace;i++)
                sb.append(" ");
            if(extraSpace>0)
            {   sb.append(" ");
                extraSpace--;
            }
            
        }
        while(sb.length()<maxWidth)
            sb.append(" ");
        result.add(sb.toString());
        i=j;
      }
        return result;
    }
}
