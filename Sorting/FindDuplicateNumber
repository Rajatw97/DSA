Q. Given an array of integers nums containing n + 1 integers where each integer is in the range [1, n] inclusive.
   There is only one repeated number in nums, return this repeated number.
   
  Input: nums = [1,3,4,2,2]
  Output: 2
  
 Pattern: Range [1,n] , Apply cycle sort



class Solution {
    public int findDuplicate(int[] nums) {
        
        
        int i=0;
        while(i<nums.length){
            int corr_index=nums[i]-1;
            if(nums[i]!=nums[corr_index])
                swap(nums,i,corr_index);
            else
                i++;
        }
        
        for(int j=0;j<nums.length;j++){
            if(nums[j]!=j+1)
                return nums[j];
        }
        return -1;
        
    }
    
    void swap(int[] nums, int firstIndex, int secondIndex){
        int temp=nums[secondIndex];
        nums[secondIndex]=nums[firstIndex];
        nums[firstIndex]=temp;
    }
}
