Q. There is an integer array nums sorted in non-decreasing order (not necessarily with distinct values). 
   Given the array nums after the rotation and an integer target, return true if target is in nums, or false if it is not in nums.
   
  Approach: Variation of search in sorted and rotated array . 
  Logic is if start and end are same you can't decide which part is sorted so handle that case by reducing your array from both start & end till you get diifferent numbers on left & right.

          class Solution {
    public boolean search(int[] nums, int target) {
        
              int start=0,end=nums.length-1;
        
        
        while(start<=end){
            
            int mid=(start+end)/2;     
          
            if(nums[mid]==target)
                return true;
            if (nums[mid]==nums[start] && nums[mid]==nums[end]){
                start++;
                end--;
            }
            else if (nums[mid]>=nums[start]){
                //left half sorted
                if(target<nums[mid] && nums[start]<=target){
                    //Target lies in first half
                    end=mid-1;
                }
                else 
                    start=mid+1;
                
            }
            else{ 
                if(target>nums[mid] && nums[end]>=target)
                    start=mid+1;
                else
                    end=mid-1;
            }
        }
        return false;
        

    }
}
