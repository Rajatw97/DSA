Q> You are implementing a program to use as your calendar. We can add a new event if adding the event will not cause a double booking.
The event can be represented as a pair of integers start and end that represents a booking on the half-open interval [start, end),
the range of real numbers x such that start <= x < end.

class MyCalendar {
    
    private TreeNode root;

    public MyCalendar() { }
    
    public boolean book(int start, int end) {
        if (root == null) {
            root = new TreeNode(start, end);
            return true;
        }
        return insert(root, start, end);
    }
    
    private boolean insert(TreeNode root, int start, int end) {
        if (end <= root.start) {
            if (root.left == null) {
                root.left = new TreeNode(start, end);
                return true;
            }
            return insert(root.left, start, end);
        }
        if (start >= root.end) {
            if (root.right == null) {
                root.right = new TreeNode(start, end);
                return true;
            }
            return insert(root.right, start, end);
        }
        return false;
    }
    
    class TreeNode {
        TreeNode left;
        TreeNode right;
        int start; 
        int end;
        TreeNode(int start, int end) {
            this.start = start;
            this.end = end;
        }
    }
}
