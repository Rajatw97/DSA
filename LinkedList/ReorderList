Q.Reorder the list to be on the following form:

L0 → Ln → L1 → Ln - 1 → L2 → Ln - 2 → …


Input: head = [1,2,3,4]
Output: [1,4,2,3]

class Solution {
    public void reorderList(ListNode head) {
     
        if(head==null || head.next==null)
            return;
        
        ListNode mid=middleNode(head);
        ListNode secondHead=reverseList(mid);
        ListNode firstHead=head;
        
        while(firstHead!=null && secondHead!=null){
            
            ListNode temp=firstHead.next;
            firstHead.next=secondHead;
            firstHead=temp;
            
            temp=secondHead.next;
            secondHead.next=firstHead;
            secondHead=temp;
            
        }
        if(firstHead!=null)
            firstHead.next=null;
        
    }

     public ListNode middleNode(ListNode head) {
        
        ListNode slow=head,fast=head;
        
        try{    
        
        while(fast!=null && fast.next!=null){
            slow=slow.next;
            fast=fast.next.next;
        }
        }catch(Exception e){}
        
        return slow;
            
    }
    public ListNode reverseList(ListNode head) {
        
        ListNode prevNode=null,currNode=head,nextNode=null;
        
        while(currNode!=null){
            nextNode=currNode.next;
            currNode.next=prevNode;
            prevNode=currNode;
            currNode=nextNode;
        }
        return prevNode;
    }
}
