Q. Merge two sorted linked lists and return it as a sorted list. The list should be made by splicing together the nodes of the first two lists.


/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
      
        ListNode p1=l1,p2=l2;        
        ListNode l3=new ListNode();
        
        
        if(l1==null) return l2;
        if(l2==null) return l1;
        if(p1.val<=p2.val){
            l3=p1;
            p1=p1.next;
        }
        else{
            l3=p2;
            p2=p2.next;
        }
        ListNode l3Head=l3;        
        
        while(p1!=null && p2!=null){
            
            if(p1.val<=p2.val){
                l3.next=p1;
                l3=l3.next;
                p1=p1.next;
            }
            else
            {   l3.next=p2;
                l3=l3.next;
                p2=p2.next;
            }
           
        }
        
        while(p1!=null){
            l3.next=p1;
            l3=l3.next;
            p1=p1.next;
        }
        while(p2!=null){
            l3.next=p2;
            l3=l3.next;
            p2=p2.next;
        }
        
        return l3Head;
        }
}
