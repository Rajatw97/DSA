Q. Given an m x n binary matrix filled with 0's and 1's, find the largest square containing only 1's and return its area.

Input: matrix = [["1","0","1","0","0"],["1","0","1","1","1"],["1","1","1","1","1"],["1","0","0","1","0"]]
Output: 4

class Solution {
    public int maximalSquare(char[][] matrix) {
        
        int dp[][]=new int [matrix.length+1][matrix[0].length+1];
        int max=Integer.MIN_VALUE;
        for(int i=0;i<=matrix.length;i++){
            for(int j=0;j<=matrix[0].length;j++){
                
                if(i==0 || j==0)
                    dp[i][j]=0;
                
                else if(matrix[i-1][j-1]=='1')
                    dp[i][j]=1+Math.min(dp[i-1][j-1],Math.min(dp[i-1][j],dp[i][j-1]));
                
                if(dp[i][j] > max)
                    max=dp[i][j];
            }
        }
      
        return max*max;
    }
}
