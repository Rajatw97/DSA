Q. You need to divide the array A into two subsets S1 and S2 such that the absolute difference between their sums is minimum.

 I/P: A = [1, 6, 11, 5]
 O/P: 1

import java.util.*;
import java.lang.*;
public class Solution {
    public int solve(int[] A) {
        int sum=0;
        for(int i=0;i<A.length;i++)
            sum+=A[i];
        boolean[][] dp=new boolean[A.length+1][sum+1];

        for(int i=0;i<=A.length;i++){
            for(int j=0;j<=sum;j++){
                  
                if(j==0)
                    dp[i][j]=true;
                else if(i==0)
                    dp[i][j]=false;
               
                else if(A[i-1]>j)
                    dp[i][j]=dp[i-1][j];
                else
                    dp[i][j]=dp[i-1][j] || dp[i-1] [j-A[i-1]]; 
            }
        }
        int minDiff=Integer.MAX_VALUE;
        for(int i=0;i<=sum/2;i++){
            if(dp[A.length][i])
                minDiff=Math.min(minDiff,sum-2*i);
        }
        return minDiff;
    }
}
