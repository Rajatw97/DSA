Q> You are given ‘N’ words of various lengths, now you have to arrange these words in such a way that each line contains at most ‘M’ characters and each word
is separated by a space character. The cost of each line is equal to the cube of extra space characters required to complete ‘M’ characters in that particular line.
Total cost is equal to the sum of costs of each line. Your task is to form this arrangement with the minimum cost possible and return the minimum total cost.

public int arrangeWords(String[] words, int M) {
    int n = words.length;
    int[] dp = new int[n + 1]; // to store minimum cost for first i words

    for (int i = 1; i <= n; i++) {
        dp[i] = Integer.MAX_VALUE;
        int len = -1;
        for (int j = i; j >= 1; j--) {
            len += words[j - 1].length() + 1; // length of current line including space
            if (len > M) {
                break;
            }
            int spacesLeft = M - len;
            int cost = spacesLeft * spacesLeft * spacesLeft + dp[j - 1];
            dp[i] = Math.min(dp[i], cost);
        }
    }

    return dp[n];
}
